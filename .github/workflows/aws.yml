name: Deploy to Amazon ECR

on:
  push:
    branches: [ "develop" , "main"]
  pull_request:
    branches: [ "main" ]
                
permissions:
  contents: read

jobs:
  deploy:
    name: Build and Deploy Image
    runs-on: ubuntu-latest
  
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: create .env file
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_PORT: 4005
        envkey_NODE_ENV: development
        envkey_DATABASE_URL: ${{ secrets.DATABASE_URL }}
        envkey_LOG_LEVEL: http  
        envkey_DISK_STORAGE: local
        file_name: .env
        fail_on_empty: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        IMAGE_TAG: "latest"
      run: |
        # Build a docker container and
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
       
        # push it to ECR 
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
       
        
    - name: copy file via ssh        
      uses: appleboy/scp-action@master
      with:
        host:  ${{ secrets.SERVER_PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        port: 22
        source: "nginx/default.conf, nginx/DockerFile, docker-compose.yml"
        target: "./"
        
    - name: Deploy docker image to EC2        
      uses: appleboy/ssh-action@master
      env:
        AWS_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        IMAGE_TAG: "latest"
        AWS_REGION: us-east-1
      with:
        host:  ${{ secrets.SERVER_PUBLIC_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        port: 22
        script: |
          sudo $(aws ecr get-login --no-include-email --region us-east-1);
          sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
          sudo docker compose down || true
          sudo docker compose up -D --build --build-arg srvimage=$REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Logout to Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
